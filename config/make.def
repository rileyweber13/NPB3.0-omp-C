#---------------------------------------------------------------------------
#
#                SITE- AND/OR PLATFORM-SPECIFIC DEFINITIONS. 
#
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# Items in this file will need to be changed for each platform.
# (Note these definitions are inconsistent with NPB2.1.)
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# Fine Hardware Visualization (FHV) configuration:
#
# In order to use metering with FHV, the lines below will need to be
# un-commented and paths adjusted to match your system. Unless you have
# customized FHV or likwid, you will only need to change `FHV_PERFMON_PREFIX`
# and `LIKWID_PREFIX`
#
# Information about downloading and building FHV may be found here:
# https://github.com/rileyweber13/fine-hardware-visualization
#
# Information about downloading and building likwid may be found here:
# https://github.com/RRZE-HPC/likwid
#
# The final variable, "RUN_CMD_PREFIX", is provided for convenience: if these
# tools are installed to non-standard prefixes, this command makes it easy to
# suuply environment variables like LD_LIBRARY_PATH
#---------------------------------------------------------------------------

#FHV_PERFMON_PREFIX=/usr/local/fhv
#LIKWID_PREFIX=/usr/local/likwid-master

#FHV_INC_FLAG=-I$(FHV_PERFMON_PREFIX)/include
#FHV_LIB_DIR=$(FHV_PERFMON_PREFIX)/lib
#FHV_LIB_FLAGS=-L$(FHV_LIB_DIR) -lfhv_perfmon

#LIKWID_INC_FLAG=-I$(LIKWID_PREFIX)/include
#LIKWID_LIB_FLAGS=-L$(LIKWID_PREFIX)/lib -llikwid

#RUN_CMD_PREFIX=LD_LIBRARY_PATH=$(LIKWID_PREFIX)/lib:$(FHV_LIB_DIR) \
#PATH=$(LIKWID_PREFIX)/sbin:$(LIKWID_PREFIX)/bin:$$PATH

#---------------------------------------------------------------------------
# Parallel C:
#
# The following must be defined:
#
# CC         - C compiler 
# CFLAGS     - C compilation arguments
# C_INC      - any -I arguments required for compiling C 
# CLINK      - C linker
# CLINKFLAGS - C linker flags
# C_LIB      - any -L and -l arguments required for linking C 
#
# compilations are done with $(CC) $(C_INC) $(CFLAGS) or
#                            $(CC) $(CFLAGS)
# linking is done with       $(CLINK) $(C_LIB) $(CLINKFLAGS)
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# This is the C compiler used for OpenMP programs
#---------------------------------------------------------------------------
CC = gcc
# This links C programs; usually the same as ${CC}
CLINK	= gcc

#---------------------------------------------------------------------------
# These macros are passed to the linker 
#---------------------------------------------------------------------------
C_LIB  = $(LIKWID_LIB_FLAGS) $(FHV_LIB_FLAGS) -lm

#---------------------------------------------------------------------------
# These macros are passed to the compiler 
#---------------------------------------------------------------------------
C_INC = $(LIKWID_INC_FLAG) $(FHV_INC_FLAG) -I../common

#---------------------------------------------------------------------------
# Global *compile time* flags for C programs
#---------------------------------------------------------------------------
CFLAGS	= -O3 -fopenmp
# CFLAGS = -g

#---------------------------------------------------------------------------
# Global *link time* flags. Flags for increasing maximum executable 
# size usually go here. 
#---------------------------------------------------------------------------
CLINKFLAGS = -fopenmp


#---------------------------------------------------------------------------
# Utilities C:
#
# This is the C compiler used to compile C utilities.  Flags required by 
# this compiler go here also; typically there are few flags required; hence 
# there are no separate macros provided for such flags.
#---------------------------------------------------------------------------
UCC	= cc -O


#---------------------------------------------------------------------------
# Destination of executables, relative to subdirs of the main directory. . 
#---------------------------------------------------------------------------
BINDIR	= ../bin


#---------------------------------------------------------------------------
# The variable RAND controls which random number generator 
# is used. It is described in detail in Doc/README.install. 
# Use "randi8" unless there is a reason to use another one. 
# Other allowed values are "randi8_safe", "randdp" and "randdpvec"
#---------------------------------------------------------------------------
# RAND   = randi8
# The following is highly reliable but may be slow:
RAND   = randdp


#---------------------------------------------------------------------------
# The variable WTIME is the name of the wtime source code module in the
# NPB2.x/common directory.  
# For most machines,       use wtime.c
# For SGI power challenge: use wtime_sgi64.c
#---------------------------------------------------------------------------
WTIME  = wtime.c


#---------------------------------------------------------------------------
# Enable if either Cray or IBM: 
# (no such flag for most machines: see common/wtime.h)
# This is used by the C compiler to pass the machine name to common/wtime.h,
# where the C/Fortran binding interface format is determined
#---------------------------------------------------------------------------
# MACHINE	=	-DCRAY
# MACHINE	=	-DIBM


